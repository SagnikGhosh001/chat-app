// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  username  String   @unique
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  messages  Message[]  @relation("user-message")
  userRooms UserRoom[] @relation("user-room")
}

model Message {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String   @db.ObjectId
  user      User     @relation("user-message", fields: [userId], references: [id])
  roomId    String   @db.ObjectId
  room      Room     @relation("room-message", fields: [roomId], references: [id])

}

model Room {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  roomId    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  messages  Message[]  @relation("room-message")
  userRooms UserRoom[] @relation("room-user")
}

model UserRoom{
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  user      User     @relation("user-room", fields: [userId], references: [id])
  roomId    String   @db.ObjectId
  room      Room     @relation("room-user", fields: [roomId], references: [id])
  joinedAt DateTime @default(now())
  @@unique([userId,roomId])
}